# Development overrides for docker-compose.yml
# This file is automatically loaded by docker-compose in development

version: '3.8'

services:
  # API service with development settings
  api:
    environment:
      - DEBUG=true
      - RELOAD=true
    volumes:
      - ./services/api:/app:cached
      - /app/__pycache__
    command: ["python", "-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "debug"]

  # Worker service with development settings
  worker:
    environment:
      - DEBUG=true
    volumes:
      - ./services/worker:/app:cached
      - /app/__pycache__
    command: ["celery", "-A", "celery_app", "worker", "--loglevel=debug", "--concurrency=2"]

  # Web service with development settings
  web:
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    volumes:
      - ./apps/web:/app:cached
      - /app/node_modules
      - /app/.next
    command: ["npm", "run", "dev"]

  # Add Celery Flower for monitoring (development only)
  flower:
    image: mher/flower:latest
    container_name: ghostworks-flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - worker
    networks:
      - ghostworks-network

  # Add Adminer for database management (development only)
  adminer:
    image: adminer:latest
    container_name: ghostworks-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    depends_on:
      - postgres
    networks:
      - ghostworks-network

  # Add Redis Commander for Redis management (development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ghostworks-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - ghostworks-network